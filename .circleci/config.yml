# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.

commands:
  print_pipeline_id:
    description: "to print pipeline id through command"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

  print_id_with_param:  
    description: "to print pipeline id through command using parameter"
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>  

orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

jobs:

  print_hello:
    environment:
      MSG: "hello"
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: print hello
          command:
            echo $MSG

  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: print world
          command:
            echo "world" 
  
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt  

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt  

  run_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id

  run_param_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_id_with_param:
          id: << pipeline.id >>    


workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - print_hello
      - print_world:
          requires: [print_hello]
      - save_hello_world_output
      - print_output_file:
          requires: [save_hello_world_output]  
      - run_command:
          requires: [print_output_file]  
      - run_param_command:
          requires: [run_command]

      
